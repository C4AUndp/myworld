# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
0-59 * * * * /home/ubuntu/myworld_api/monitor.py >> /home/ubuntu/myworld_api/cronlogs.log 2>&1
*/2 * * * * /home/ubuntu/myworld_data_integrity/monitor_integrity_update.py >> /home/ubuntu/myworld_data_integrity/cronlogs.log 2>&1
*/15 * * * * /home/ubuntu/myworld_api/update_static_files.py >> /home/ubuntu/myworld_api/static_files_cronlogs.log 2>&1
0 * * * * /home/ubuntu/myworld_api/update_cache.py >> /home/ubuntu/myworld_api/update_cache_cronlogs.log 2>&1

#Import Staging Data into master2 produciton DB
10 */3 * * * sh /home/ubuntu/staging_import/offline_cvs_import.sh >> /home/ubuntu/staging_import/logs/offline_cvs_import.log 2>&1
40 */1 * * * sh /home/ubuntu/staging_import/offline_partner_import.sh >> /home/ubuntu/staging_import/logs/offline_partner_import.log 2>&1
0 */1 * * * sh /home/ubuntu/staging_import/website_import.sh >> /home/ubuntu/staging_import/logs/website_import.log 2>&1
*/30 * * * * sh /home/ubuntu/staging_import/app_import.sh >> /home/ubuntu/staging_import/logs/app_import.log 2>&1

# Refresh Partner list from website
*/10 * * * * sh home/ubuntu/staging_import/partner_refresh.sh

# update segment of logs for monitoring tool:
*/15 * * * * sh /home/ubuntu/updateLogs.sh

# update CSV dump of MY World votes for public release
30 3 * * * sh /home/ubuntu/export/updateExports.sh

# restart d3 render process and kill all phantomjs processes
10 4 * * * sh /home/ubuntu/d3render/restart.sh
# count new votes in statsdb
*/5 * * * * sh /home/ubuntu/statsdb/myworld.sh >> /home/ubuntu/statsdb/myworld_collect.log 2>&1
# daily backup statsdb
40 2 * * * sh /home/ubuntu/statsdb/myworld-backup.sh
